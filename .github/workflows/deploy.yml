# .github/workflows/deploy.yml

name: EC2로 자동배포하기

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Github Repository 파일 가져오기
        uses: actions/checkout@v4

      - name: Node 설치
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 의존성(라이브러리) 설치
        run: npm ci

      - name: .env 파일 생성
        run: echo "${{ secrets.ENV }}" > .env

      - name: 빌드
        run: npm run build

      - name: 압축
        # NODE_MODULES 폴더는 압축하지 않는다.
        # 커밋 해시를 파일명으로 사용하여 고유한 파일명을 생성한다.
        run: tar -czvf $GITHUB_SHA.tar.gz appspec.yml scripts .next .env package.json package-lock.json

      - name: AWS 서비스에 접근할 수 있게 AWS credentials 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: S3에 프로젝트 폴더 업로드하기
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.tar.gz s3://codeit-nextjs-aws-test-storage/$GITHUB_SHA.tar.gz

      - name: Code Deploy를 활용해 EC2에 프로젝트 코드 배포
        run: |
          aws deploy create-deployment
          --application-name nextjs-aws-test
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name Production
          --s3-location bucket=codeit-nextjs-aws-test-storage,bundleType=tgz,key=$GITHUB_SHA.tar.gz
